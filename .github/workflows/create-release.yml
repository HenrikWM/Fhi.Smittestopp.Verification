name: Create release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

env:
  DOTNET_VERSION: 3.1.301

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    # Job setup
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    # Build, test and publish app
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: dotnet test --no-restore --verbosity normal
    - name: Publish
      run: dotnet publish Fhi.Smittestopp.Verification.Server --configuration Release --no-build --output published-app

    # Publish app artifact
    - name: Build project # This would actually build your project, using zip for an example artifact
      run: zip --junk-paths Fhi.Smittestopp.Verification.Server.zip published-app
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
        prerelease: ${{ contains(github.ref, '-') }} # Prerelease if vX.Y.Z-<any-suffix>
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./Fhi.Smittestopp.Verification.Server.zip
        asset_name: Fhi.Smittestopp.Verification.Server.zip
        asset_content_type: application/zip